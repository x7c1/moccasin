import { appendFile, writeFile } from "../fs_promise"
import { FragmentContent } from "../loader/loader"

const warning =
  "# This file is automatically generated on copenhagen-specs.\n" +
  "# Do not modify this file " +
  "-- YOUR CHANGES WILL BE ERASED!\n\n"

class Appender {
  constructor (private readonly outputPath: string) {}

  clear (): Promise<void> {
    console.log("[Appender] clear:", this.outputPath)
    return writeFile(this.outputPath, warning)
  }

  append (content: string): Promise<void> {
    return appendFile(this.outputPath, content)
  }

  appendAll (contents: FragmentContent[]): Promise<void> {
    const append = (content: FragmentContent) =>
      this.append(content.dump()).catch(err => {
        console.error("[Appender] failed to write content:", content, err)
      })

    return Promise.all(contents.map(append)).then(_ => undefined)
  }
}

export const createAppender = (outputPath: string) => {
  return new Appender(outputPath)
}
